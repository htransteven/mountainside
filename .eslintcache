[{"C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\index.js":"1","C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\reportWebVitals.js":"2","C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\contexts\\FirebaseContext.js":"3","C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\Main.js":"4","C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\components\\LoginMenu.js":"5","C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\defaultStyles.js":"6","C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\components\\RoomsPage.js":"7","C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\components\\Navbar.js":"8","C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\components\\RoomController.js":"9","C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\components\\UserInfo.js":"10","C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\components\\RoomCard.js":"11","C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\components\\NewRoomMenu.js":"12"},{"size":636,"mtime":1610845858687,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1606260783829,"results":"15","hashOfConfig":"14"},{"size":1407,"mtime":1610847166937,"results":"16","hashOfConfig":"14"},{"size":822,"mtime":1610864233031,"results":"17","hashOfConfig":"14"},{"size":3075,"mtime":1610864003648,"results":"18","hashOfConfig":"14"},{"size":431,"mtime":1610862552271,"results":"19","hashOfConfig":"14"},{"size":868,"mtime":1610864254648,"results":"20","hashOfConfig":"14"},{"size":2050,"mtime":1610843211344,"results":"21","hashOfConfig":"14"},{"size":4601,"mtime":1610863448427,"results":"22","hashOfConfig":"14"},{"size":4410,"mtime":1610858802739,"results":"23","hashOfConfig":"14"},{"size":4202,"mtime":1610863690556,"results":"24","hashOfConfig":"14"},{"size":6594,"mtime":1610863189280,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1v4845x",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\index.js",[],["54","55"],"C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\reportWebVitals.js",[],"C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\contexts\\FirebaseContext.js",[],"C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\Main.js",[],"C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\components\\LoginMenu.js",["56","57","58"],"C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\defaultStyles.js",[],"C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\components\\RoomsPage.js",["59","60","61"],"C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\components\\Navbar.js",[],"C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\components\\RoomController.js",["62"],"import React, {\r\n  useState,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useCallback,\r\n} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { fonts, colors } from \"../defaultStyles\";\r\n\r\nimport RoomCard from \"./RoomCard\";\r\nimport NewRoomMenu from \"./NewRoomMenu\";\r\n\r\nimport { useFirebase } from \"../contexts/FirebaseContext\";\r\n\r\nconst RoomsWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  grid-gap: 20px;\r\n  width: 100%;\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst TitleLabel = styled.span`\r\n  font-family: ${fonts.secondaryFont};\r\n  color: ${colors.textPrimary};\r\n  text-transform: uppercase;\r\n  font-size: 2.5rem;\r\n  line-height: 1em;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  outline: none;\r\n  border: none;\r\n  color: ${colors.textPrimary};\r\n  background: none;\r\n  opacity: 0.75;\r\n  margin-left: 20px;\r\n  font-size: 1.1em;\r\n  padding: 3px 12px;\r\n  border-radius: 5px;\r\n  line-height: 1em;\r\n  border: 2px solid ${colors.lightBlue};\r\n  transition: 0.2s opacity, 0.2s color, 0.2s background-color;\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n    background-color: ${colors.lightBlue};\r\n    color: ${colors.textPrimary};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ModalWrapper = styled.div`\r\n  position: absolute;\r\n  z-index: 1;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background-color: rgba(0, 0, 0, 0.85);\r\n`;\r\n\r\nconst ModalContentWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 850px;\r\n  padding: 30px;\r\n  background-color: ${colors.background};\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n  box-shadow: 0px 2px 25px 6px rgba(0, 0, 0, 0.8);\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst RoomController = ({ user }) => {\r\n  const firebase = useFirebase();\r\n  const db = firebase.firestore();\r\n  const [rooms, setRooms] = useState([]);\r\n  const [myRooms, setMyRooms] = useState([]);\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const escapeModal = useCallback((event) => {\r\n    console.log(event);\r\n    if (event.keyCode === 27) {\r\n      setModalOpen(false);\r\n    }\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    if (modalOpen) {\r\n      window.addEventListener(\"keydown\", escapeModal);\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", escapeModal);\r\n    };\r\n  }, [modalOpen, escapeModal]);\r\n\r\n  useEffect(() => {\r\n    // get all available rooms from firestore\r\n    db.collection(\"rooms\").onSnapshot((snapshot) => {\r\n      snapshot.docChanges().forEach((change) => {\r\n        const docData = change.doc.data();\r\n        if (change.type === \"added\") {\r\n          setRooms((prev) => {\r\n            const copy = [...prev];\r\n            copy.push(docData);\r\n            return copy;\r\n          });\r\n          if (docData.host === user.email) {\r\n            setMyRooms((prev) => {\r\n              const copy = [...prev];\r\n              copy.push(docData);\r\n              return copy;\r\n            });\r\n          }\r\n        }\r\n        if (change.type === \"removed\") {\r\n          setRooms((prev) => {\r\n            const copy = [...prev];\r\n            return copy.filter((room) => room.id !== docData.id);\r\n          });\r\n\r\n          if (docData.host === user.email) {\r\n            setMyRooms((prev) => {\r\n              const copy = [...prev];\r\n              return copy.filter((room) => room.id !== docData.id);\r\n            });\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }, [db]);\r\n\r\n  return (\r\n    <>\r\n      <TitleWrapper>\r\n        <TitleLabel>Your Rooms</TitleLabel>\r\n        <ActionButton onClick={() => setModalOpen(true)}>\r\n          Create Room\r\n        </ActionButton>\r\n      </TitleWrapper>\r\n      <RoomsWrapper>\r\n        {myRooms.map((room) => (\r\n          <RoomCard room={room} isOwner={true} user={user} />\r\n        ))}\r\n      </RoomsWrapper>\r\n      <TitleWrapper>\r\n        <TitleLabel>All Study Rooms</TitleLabel>\r\n      </TitleWrapper>\r\n      <RoomsWrapper>\r\n        {rooms.map((room) => (\r\n          <RoomCard room={room} user={user} />\r\n        ))}\r\n      </RoomsWrapper>\r\n      {modalOpen && (\r\n        <ModalWrapper onClick={() => setModalOpen(false)}>\r\n          <ModalContentWrapper onClick={(e) => e.stopPropagation()}>\r\n            <NewRoomMenu user={user} onSubmit={() => setModalOpen(false)} />\r\n          </ModalContentWrapper>\r\n        </ModalWrapper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RoomController;\r\n","C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\components\\UserInfo.js",[],"C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\components\\RoomCard.js",["63","64"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { colors, fonts } from \"../defaultStyles\";\r\nimport { useFirebase } from \"../contexts/FirebaseContext\";\r\n\r\nconst CardWrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n  border-radius: 15px;\r\n  overflow: hidden;\r\n  padding: 25px;\r\n  box-shadow: 0px 2px 20px 2px rgba(0, 0, 0, 0.5);\r\n  transition: 0.35s transform, 0.35s box-shadow, 0.35s opacity;\r\n  opacity: 0.85;\r\n  &:hover {\r\n    opacity: 1;\r\n    transform: translateY(-8px);\r\n    box-shadow: 0px 6px 25px 8px rgba(0, 0, 0, 0.3);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst CardFill = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(\r\n    305deg,\r\n    ${colors.darkBlue} 0%,\r\n    ${colors.lightBlue} 100%\r\n  );\r\n  opacity: 0.6;\r\n`;\r\n\r\nconst CardEntry = styled.div`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n  z-index: 1;\r\n\r\n  margin: 5px 0;\r\n\r\n  &:first-of-type {\r\n    margin-top: 0;\r\n  }\r\n  &:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst CardEntryTitle = styled.span`\r\n  color: ${colors.textSecondary};\r\n  margin-bottom: -2px;\r\n  font-family: ${fonts.primaryFont};\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst CardEntryValue = styled.span`\r\n  color: ${colors.textPrimary};\r\n  font-size: 1.2em;\r\n  font-family: ${fonts.secondaryFont};\r\n`;\r\n\r\nconst CardActions = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  width: 100%;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst JoinButton = styled.button`\r\n  z-index: 1;\r\n  outline: none;\r\n  border: none;\r\n  color: ${colors.textPrimary};\r\n  background: none;\r\n  opacity: 0.75;\r\n  font-size: 1.1em;\r\n  padding: 6px 18px;\r\n  border-radius: 5px;\r\n  border: 2px solid ${colors.textPrimary};\r\n  transition: 0.2s opacity, 0.2s color, 0.2s background-color;\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n    background-color: ${colors.textPrimary};\r\n    color: ${colors.darkBlue};\r\n    border-bottom: 2px solid ${colors.textPrimary};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst CardIcon = styled.i`\r\n  position: absolute;\r\n  color: white;\r\n  top: 25px;\r\n  right: 25px;\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n  width: auto;\r\n  transition: 0.15s color;\r\n\r\n  &:hover {\r\n    color: ${colors.red};\r\n  }\r\n`;\r\n\r\nconst RoomCard = ({ isOwner, user, room }) => {\r\n  const firebase = useFirebase();\r\n  const db = firebase.firestore();\r\n  const { id, name, isPublic, mood, moodMessage } = room;\r\n\r\n  const handleDeleteEvent = async () => {\r\n    const requestOptions = {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Authorization: `Bearer ${user.accessToken}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    await fetch(\r\n      `https://www.googleapis.com/calendar/v3/calendars/${user.email}/events/${id}`,\r\n      requestOptions\r\n    ).catch(function (error) {\r\n      alert(`Error: Failed to delete event from calendar\\n\\nError: ${error}`);\r\n    });\r\n    await db\r\n      .collection(\"rooms\")\r\n      .doc(id)\r\n      .delete()\r\n      .then(function () {})\r\n      .catch(function (error) {\r\n        alert(`Error: Failed to delete room from database\\n\\nError: ${error}`);\r\n      });\r\n  };\r\n  return (\r\n    <CardWrapper>\r\n      <CardFill />\r\n      <CardEntry>\r\n        <CardEntryTitle>ROOM NAME</CardEntryTitle>\r\n        <CardEntryValue>{name}</CardEntryValue>\r\n      </CardEntry>\r\n      <CardEntry>\r\n        <CardEntryTitle>ACCESS</CardEntryTitle>\r\n        <CardEntryValue>{isPublic ? \"private\" : \"public\"}</CardEntryValue>\r\n      </CardEntry>\r\n      <CardEntry>\r\n        <CardEntryTitle>MOOD</CardEntryTitle>\r\n        <CardEntryValue>{mood}</CardEntryValue>\r\n      </CardEntry>\r\n      <CardEntry>\r\n        <CardEntryTitle>MOOD MESSAGE</CardEntryTitle>\r\n        <CardEntryValue>{moodMessage}</CardEntryValue>\r\n      </CardEntry>\r\n      {isOwner && (\r\n        <CardIcon\r\n          className=\"fas fa-trash-alt\"\r\n          onClick={handleDeleteEvent}\r\n        ></CardIcon>\r\n      )}\r\n    </CardWrapper>\r\n  );\r\n};\r\n\r\nexport default RoomCard;\r\n","C:\\Users\\htran\\Desktop\\github\\mountainside\\src\\components\\NewRoomMenu.js",["65","66"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { colors, dimensions, fonts } from \"../defaultStyles\";\r\nimport { useFirebase } from \"../contexts/FirebaseContext\";\r\n\r\nconst MenuWrapper = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: auto 1fr;\r\n  grid-template-rows: repeat(3, 1fr);\r\n  grid-gap: 15px 35px;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst TitleLabel = styled.span`\r\n  font-family: ${fonts.primaryFont};\r\n  color: ${colors.lightBlue};\r\n  text-transform: uppercase;\r\n  font-size: 2.5rem;\r\n  line-height: 1em;\r\n  margin-bottom: 1.5rem;\r\n`;\r\n\r\nconst InputLabel = styled.label`\r\n  color: ${colors.textSecondary};\r\n  font-family: ${fonts.primaryFont};\r\n  font-size: 1.3rem;\r\n`;\r\n\r\nconst TextInput = styled.input`\r\n  background: none;\r\n  border: none;\r\n  background-color: ${colors.backgroundBlue};\r\n  padding: 15px;\r\n  outline: none;\r\n  color: ${colors.textPrimary};\r\n  font-family: ${fonts.secondaryFont};\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst DropDownMenu = styled.select`\r\n  border-radius: 5px;\r\n  border: none;\r\n  background-color: ${colors.backgroundBlue};\r\n  padding: 15px;\r\n  outline: none;\r\n  font-family: ${fonts.secondaryFont};\r\n  color: ${colors.textPrimary};\r\n  font-size: 1rem;\r\n  text-transform: capitalize;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst DropDownMenuItemWrapper = styled.option`\r\n  text-transform: capitalize;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  outline: none;\r\n  border: none;\r\n  color: ${colors.textPrimary};\r\n  font-size: 1.1em;\r\n  padding: 6px 12px;\r\n  border-radius: 5px;\r\n  width: 100%;\r\n  opacity: 0.85;\r\n  background-color: ${colors.lightBlue};\r\n  color: ${colors.textPrimary};\r\n  margin-top: 1rem;\r\n  transition: 0.15s opacity, 0.15s background-color;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n    background-color: ${colors.lightBlue};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst DropDownMenuItem = ({ selected, disabled, hidden, value }) => {\r\n  return (\r\n    <DropDownMenuItemWrapper\r\n      selected={selected}\r\n      disabled={disabled}\r\n      hidden={hidden}\r\n      value={value}\r\n    >\r\n      {value}\r\n    </DropDownMenuItemWrapper>\r\n  );\r\n};\r\n\r\nconst moodOptions = [\"Chilling\", \"Grinding\", \"Lasered\"];\r\n\r\nconst NewRoomMenu = ({ user, onSubmit }) => {\r\n  const firebase = useFirebase();\r\n  const db = firebase.firestore();\r\n  //room name will start as UserName's Room\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [mood, setMood] = useState(\"\");\r\n  const [isPublic, setIsPublic] = useState(false);\r\n  const [moodMessage, setMoodMessage] = useState(\"\");\r\n\r\n  const createRoom = async (e) => {\r\n    e.preventDefault();\r\n    const today = new Date();\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `Bearer ${user.accessToken}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        start: {\r\n          date: `${today.getUTCFullYear()}-${\r\n            `${today.getUTCMonth() + 1}`.length < 2\r\n              ? `0${today.getUTCMonth() + 1}`\r\n              : today.getUTCMonth() + 1\r\n          }-${\r\n            `${today.getUTCDate()}`.length < 2\r\n              ? `0${today.getUTCDate()}`\r\n              : today.getUTCDate()\r\n          }`,\r\n        },\r\n        end: {\r\n          date: `${today.getUTCFullYear()}-${\r\n            `${today.getUTCMonth() + 1}`.length < 2\r\n              ? `0${today.getUTCMonth() + 1}`\r\n              : today.getUTCMonth() + 1\r\n          }-${\r\n            `${today.getUTCDate() + 1}`.length < 2\r\n              ? `0${today.getUTCDate() + 1}`\r\n              : today.getUTCDate() + 1\r\n          }`,\r\n        },\r\n        conferenceData: {\r\n          createRequest: {\r\n            requestId: user.email,\r\n          },\r\n        },\r\n      }),\r\n    };\r\n    const createEventResponse = await fetch(\r\n      `https://www.googleapis.com/calendar/v3/calendars/${user.email}/events?conferenceDataVersion=1`,\r\n      requestOptions\r\n    ).then((response) => response.json());\r\n    console.log(createEventResponse);\r\n    await db\r\n      .collection(\"rooms\")\r\n      .doc(createEventResponse.id)\r\n      .set({\r\n        id: createEventResponse.id,\r\n        host: user.email,\r\n        hangoutLink: createEventResponse.hangoutLink,\r\n        name: roomName,\r\n        isPublic: isPublic,\r\n        mood: mood,\r\n        moodMessage: moodMessage,\r\n        createdTime: firebase.firestore.Timestamp.fromDate(\r\n          new Date(createEventResponse.created)\r\n        ),\r\n      })\r\n      .catch((error) => {\r\n        alert(\r\n          `Error: Failed to create study room in the database.\\n\\nError: ${error}`\r\n        );\r\n      });\r\n\r\n    onSubmit();\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={createRoom}\r\n      style={{ display: \"flex\", flexFlow: \"column nowrap\", width: \"100%\" }}\r\n    >\r\n      <TitleLabel>Create a New Study Room</TitleLabel>\r\n      <MenuWrapper>\r\n        <InputLabel htmlFor={\"new-room-name\"} type=\"text\">\r\n          Room Name\r\n        </InputLabel>\r\n        <TextInput\r\n          id={\"new-room-name\"}\r\n          type=\"text\"\r\n          value={roomName}\r\n          onChange={(e) => setRoomName(e.target.value)}\r\n        />\r\n        <InputLabel htmlFor={\"new-room-public\"}>Public?</InputLabel>\r\n        <DropDownMenu\r\n          name={\"new-room-public\"}\r\n          id={\"new-room-public\"}\r\n          onChange={(e) =>\r\n            setIsPublic(e.target.value === \"true\" ? true : false)\r\n          }\r\n        >\r\n          <DropDownMenuItem selected={true} value={\"true\"} />\r\n          <DropDownMenuItem value={\"false\"} />\r\n        </DropDownMenu>\r\n        <InputLabel htmlFor={\"new-room-mood\"}>Mood</InputLabel>\r\n        <DropDownMenu\r\n          name={\"new-room-moods\"}\r\n          id={\"new-room-moods\"}\r\n          onChange={(e) => setMood(e.target.value)}\r\n          placeholder={\"Select a mood\"}\r\n        >\r\n          <DropDownMenuItem\r\n            hidden={true}\r\n            disabled={true}\r\n            selected={true}\r\n            value={\"Select a mood\"}\r\n          />\r\n          {moodOptions.map((option) => (\r\n            <DropDownMenuItem value={option} />\r\n          ))}\r\n        </DropDownMenu>\r\n        <InputLabel htmlFor={\"new-room-mood-message\"}>Mood Message</InputLabel>\r\n        <TextInput\r\n          id={\"new-room-mood-message\"}\r\n          placeholder={\"Optional\"}\r\n          type=\"text\"\r\n          value={moodMessage}\r\n          onChange={(e) => setMoodMessage(e.target.value)}\r\n        />\r\n      </MenuWrapper>\r\n      <SubmitButton>Create Room</SubmitButton>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewRoomMenu;\r\n",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":28,"nodeType":"73","messageId":"74","endLine":1,"endColumn":35},{"ruleId":"71","severity":1,"message":"75","line":2,"column":10,"nodeType":"73","messageId":"74","endLine":2,"endColumn":16},{"ruleId":"71","severity":1,"message":"76","line":6,"column":8,"nodeType":"73","messageId":"74","endLine":6,"endColumn":12},{"ruleId":"71","severity":1,"message":"77","line":1,"column":27,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"78","line":3,"column":10,"nodeType":"73","messageId":"74","endLine":3,"endColumn":21},{"ruleId":"71","severity":1,"message":"79","line":4,"column":10,"nodeType":"73","messageId":"74","endLine":4,"endColumn":20},{"ruleId":"80","severity":1,"message":"81","line":146,"column":6,"nodeType":"82","endLine":146,"endColumn":10,"suggestions":"83"},{"ruleId":"71","severity":1,"message":"84","line":70,"column":7,"nodeType":"73","messageId":"74","endLine":70,"endColumn":18},{"ruleId":"71","severity":1,"message":"85","line":80,"column":7,"nodeType":"73","messageId":"74","endLine":80,"endColumn":17},{"ruleId":"71","severity":1,"message":"77","line":1,"column":27,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"86","line":3,"column":18,"nodeType":"73","messageId":"74","endLine":3,"endColumn":28},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","'logo' is defined but never used.","'useEffect' is defined but never used.","'useFirebase' is defined but never used.","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.email'. Either include it or remove the dependency array.","ArrayExpression",["89"],"'CardActions' is assigned a value but never used.","'JoinButton' is assigned a value but never used.","'dimensions' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [db, user.email]",{"range":"92","text":"93"},[3633,3637],"[db, user.email]"]